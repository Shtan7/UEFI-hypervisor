#pragma once
#include <cstdint>
#include <map>
#include <string_view>
#include "enum_to_str.hpp"

namespace hh
{
  namespace vmx
  {
    enum class exit_reason : uint16_t
    {
      exception_or_nmi = 0x00000000,
      external_interrupt = 0x00000001,
      triple_fault = 0x00000002,
      init_signal = 0x00000003,
      startup_ipi = 0x00000004,
      io_smi = 0x00000005,
      smi = 0x00000006,
      interrupt_window = 0x00000007,
      nmi_window = 0x00000008,
      task_switch = 0x00000009,
      execute_cpuid = 0x0000000a,
      execute_getsec = 0x0000000b,
      execute_hlt = 0x0000000c,
      execute_invd = 0x0000000d,
      execute_invlpg = 0x0000000e,
      execute_rdpmc = 0x0000000f,
      execute_rdtsc = 0x00000010,
      execute_rsm_in_smm = 0x00000011,
      execute_vmcall = 0x00000012,
      execute_vmclear = 0x00000013,
      execute_vmlaunch = 0x00000014,
      execute_vmptrld = 0x00000015,
      execute_vmptrst = 0x00000016,
      execute_vmread = 0x00000017,
      execute_vmresume = 0x00000018,
      execute_vmwrite = 0x00000019,
      execute_vmxoff = 0x0000001a,
      execute_vmxon = 0x0000001b,
      mov_cr = 0x0000001c,
      mov_dr = 0x0000001d,
      execute_io_instruction = 0x0000001e,
      execute_rdmsr = 0x0000001f,
      execute_wrmsr = 0x00000020,
      error_invalid_guest_state = 0x00000021,
      error_msr_load = 0x00000022,
      reserved_1 = 0x00000023,
      execute_mwait = 0x00000024,
      monitor_trap_flag = 0x00000025,
      reserved_2 = 0x00000026,
      execute_monitor = 0x00000027,
      execute_pause = 0x00000028,
      error_machine_check = 0x00000029,
      reserved_3 = 0x0000002a,
      tpr_below_threshold = 0x0000002b,
      apic_access = 0x0000002c,
      virtualized_eoi = 0x0000002d,
      gdtr_idtr_access = 0x0000002e,
      ldtr_tr_access = 0x0000002f,
      ept_violation = 0x00000030,
      ept_misconfiguration = 0x00000031,
      execute_invept = 0x00000032,
      execute_rdtscp = 0x00000033,
      vmx_preemption_timer_expired = 0x00000034,
      execute_invvpid = 0x00000035,
      execute_wbinvd = 0x00000036,
      execute_xsetbv = 0x00000037,
      apic_write = 0x00000038,
      execute_rdrand = 0x00000039,
      execute_invpcid = 0x0000003a,
      execute_vmfunc = 0x0000003b,
      execute_encls = 0x0000003c,
      execute_rdseed = 0x0000003d,
      page_modification_log_full = 0x0000003e,
      execute_xsaves = 0x0000003f,
      execute_xrstors = 0x00000040,
    };
  }

  template<> inline std::map<vmx::exit_reason, std::string_view> enum_map<vmx::exit_reason> =
  {
      { vmx::exit_reason::exception_or_nmi, "exception_or_nmi" },
      { vmx::exit_reason::external_interrupt, "external_interrupt" },
      { vmx::exit_reason::triple_fault, "triple_fault" },
      { vmx::exit_reason::init_signal, "init_signal" },
      { vmx::exit_reason::startup_ipi, "startup_ipi" },
      { vmx::exit_reason::io_smi, "io_smi" },
      { vmx::exit_reason::smi, "smi" },
      { vmx::exit_reason::interrupt_window, "interrupt_window" },
      { vmx::exit_reason::nmi_window, "nmi_window" },
      { vmx::exit_reason::task_switch, "task_switch" },
      { vmx::exit_reason::execute_cpuid, "execute_cpuid" },
      { vmx::exit_reason::execute_getsec, "execute_getsec" },
      { vmx::exit_reason::execute_hlt, "execute_hlt" },
      { vmx::exit_reason::execute_invd, "execute_invd" },
      { vmx::exit_reason::execute_invlpg, "execute_invlpg" },
      { vmx::exit_reason::execute_rdpmc, "execute_rdpmc" },
      { vmx::exit_reason::execute_rdtsc, "execute_rdtsc" },
      { vmx::exit_reason::execute_rsm_in_smm, "execute_rsm_in_smm" },
      { vmx::exit_reason::execute_vmcall, "execute_vmcall" },
      { vmx::exit_reason::execute_vmclear, "execute_vmclear" },
      { vmx::exit_reason::execute_vmlaunch, "execute_vmlaunch" },
      { vmx::exit_reason::execute_vmptrld, "execute_vmptrld" },
      { vmx::exit_reason::execute_vmptrst, "execute_vmptrst" },
      { vmx::exit_reason::execute_vmread, "execute_vmread" },
      { vmx::exit_reason::execute_vmresume, "execute_vmresume" },
      { vmx::exit_reason::execute_vmwrite, "execute_vmwrite" },
      { vmx::exit_reason::execute_vmxoff, "execute_vmxoff" },
      { vmx::exit_reason::execute_vmxon, "execute_vmxon" },
      { vmx::exit_reason::mov_cr, "mov_cr" },
      { vmx::exit_reason::mov_dr, "mov_dr" },
      { vmx::exit_reason::execute_io_instruction, "execute_io_instruction" },
      { vmx::exit_reason::execute_rdmsr, "execute_rdmsr" },
      { vmx::exit_reason::execute_wrmsr, "execute_wrmsr" },
      { vmx::exit_reason::error_invalid_guest_state, "error_invalid_guest_state" },
      { vmx::exit_reason::error_msr_load, "error_msr_load" },
      { vmx::exit_reason::execute_mwait, "execute_mwait" },
      { vmx::exit_reason::monitor_trap_flag, "monitor_trap_flag" },
      { vmx::exit_reason::execute_monitor, "execute_monitor" },
      { vmx::exit_reason::execute_pause, "execute_pause" },
      { vmx::exit_reason::error_machine_check, "error_machine_check" },
      { vmx::exit_reason::tpr_below_threshold, "tpr_below_threshold" },
      { vmx::exit_reason::apic_access, "apic_access" },
      { vmx::exit_reason::virtualized_eoi, "virtualized_eoi" },
      { vmx::exit_reason::gdtr_idtr_access, "gdtr_idtr_access" },
      { vmx::exit_reason::ldtr_tr_access, "ldtr_tr_access" },
      { vmx::exit_reason::ept_violation, "ept_violation" },
      { vmx::exit_reason::ept_misconfiguration, "ept_misconfiguration" },
      { vmx::exit_reason::execute_invept, "execute_invept" },
      { vmx::exit_reason::execute_rdtscp, "execute_rdtscp" },
      { vmx::exit_reason::vmx_preemption_timer_expired, "vmx_preemption_timer_expired" },
      { vmx::exit_reason::execute_invvpid, "execute_invvpid" },
      { vmx::exit_reason::execute_wbinvd, "execute_wbinvd" },
      { vmx::exit_reason::execute_xsetbv, "execute_xsetbv" },
      { vmx::exit_reason::apic_write, "apic_write" },
      { vmx::exit_reason::execute_rdrand, "execute_rdrand" },
      { vmx::exit_reason::execute_invpcid, "execute_invpcid" },
      { vmx::exit_reason::execute_vmfunc, "execute_vmfunc" },
      { vmx::exit_reason::execute_encls, "execute_encls" },
      { vmx::exit_reason::execute_rdseed, "execute_rdseed" },
      { vmx::exit_reason::page_modification_log_full, "page_modification_log_full" },
      { vmx::exit_reason::execute_xsaves, "execute_xsaves" },
      { vmx::exit_reason::execute_xrstors, "execute_xrstors" }
  };
}
